package com.mycompany.cmtester;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import algorithm.mp.mpFactory.MP1;
import algorithm.mp.mpFactory.MP4;
import algorithm.mp.mpFactory.MPFactory;
import algorithm.mp.MetamorphicPattern;
import algorithm.obtainpattern.*;

import javax.swing.*;
import javax.swing.text.Document;
import java.awt.event.ItemEvent;
import java.io.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;

import static com.mycompany.cmtester.TCList.getJavacArgForDir;

/**
 *
 * @author Admin
 */
public class CMTester1 extends javax.swing.JFrame {

    public String programPath;
    public String programName;

    public Vector targetFiles = new Vector();

    public String tcPath;

    public String tcName;

    public String myMP;

    public List<String> followupSeq = new ArrayList<>();
    public List<String> sourceSeq = new ArrayList<>();

    private List<String> groups = new ArrayList<>();

    ObtainPattern obtpg1 = new OBTP1();
    ObtainPattern obtpg2 = new OBTP2();
    ObtainPattern obtpg3 = new OBTP3();
    ObtainPattern obtpg4 = new OBTP4();
    ObtainPattern obtpg5 = new OBTP5();
    ObtainPattern obtpg6 = new OBTP6();

    /**
     * Creates new form CMTester
     */
    public CMTester1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTabbedPaneMain = new javax.swing.JTabbedPane();
        testPerartionPanel = new javax.swing.JPanel();
        firstSP = new javax.swing.JScrollPane();
        procedure = new javax.swing.JTextArea();
        TCUploadPanel = new javax.swing.JPanel();
        TCUploadLable = new JLabel();
        uploadButton = new javax.swing.JButton();
        jScrollPaneTS = new javax.swing.JScrollPane();
        jTableTS = new javax.swing.JTable();
        jScrollPaneTC = new javax.swing.JScrollPane();
        jTextAreaTC = new javax.swing.JTextArea();
        sharedVariablePanel = new javax.swing.JPanel();
        praseLable = new JLabel();
        praseButton = new javax.swing.JButton();
        jScrollPanesharedVariable = new javax.swing.JScrollPane();
        jTableSharedVariable = new javax.swing.JTable();
        programPan = new javax.swing.JPanel();
        programPathLable1 = new JLabel();
        programfield1 = new javax.swing.JTextField();
        programButt1 = new javax.swing.JButton();
        jButtonBack = new javax.swing.JButton();
        jButtonNext = new javax.swing.JButton();
        jButtonExit = new javax.swing.JButton();
        executionPanel = new javax.swing.JPanel();
        infoPan = new javax.swing.JPanel();
        jLabelProgram = new JLabel();
        jLabelTC = new JLabel();
        programInfoField = new javax.swing.JTextField();
        tcInfoField = new javax.swing.JTextField();
        generateFSSP = new javax.swing.JScrollPane();
        jTabbedPaneGenerateFS = new javax.swing.JTabbedPane();
        matchPanel = new javax.swing.JPanel();
        jLabelMatch = new JLabel();
        jButtonMatch = new javax.swing.JButton();
        jScrollPanePattern = new javax.swing.JScrollPane();
        jTablePattern = new javax.swing.JTable();
        generatePanel = new javax.swing.JPanel();
        jLabelSelectMP = new JLabel();
        mpComBox = new javax.swing.JComboBox<>();
        generateBut = new javax.swing.JButton();
        fsSP = new javax.swing.JScrollPane();
        fsArea = new javax.swing.JTextArea();
        jLabelGenerate = new JLabel();
        firstExePan = new javax.swing.JPanel();
        jLabelExe = new JLabel();
        jButtonExe = new javax.swing.JButton();
        jScrollPaneSS = new javax.swing.JScrollPane();
        jTextAreaSS = new javax.swing.JTextArea();
        firstSP1 = new javax.swing.JScrollPane();
        procedure1 = new javax.swing.JTextArea();
        jButtonBack2 = new javax.swing.JButton();
        jButtonNext2 = new javax.swing.JButton();
        jButtonExit2 = new javax.swing.JButton();
        secExePan1 = new javax.swing.JPanel();
        jLabelExe2 = new JLabel();
        jButtonExe2 = new javax.swing.JButton();
        jScrollPaneFO = new javax.swing.JScrollPane();
        jTextAreaFO = new javax.swing.JTextArea();
        jButtonDpwnload = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                },
                new String [] {
                        "Title 1", "Title 2", "Title 3", "Title 4"
                }
        ));
        jScrollPane3.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CMTester");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jTabbedPaneMain.setToolTipText("");
        jTabbedPaneMain.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        testPerartionPanel.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        firstSP.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Procedure", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12)));

        procedure.setEditable(false);
        procedure.setBackground(new java.awt.Color(240, 240, 240));
        procedure.setColumns(5);
        procedure.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        procedure.setRows(5);
        procedure.setTabSize(5);
        procedure.setText("\nStep 1: Click the \"Browse\" bu-\ntton on the \"Concurrent Progr-\nam Under Test Selection \" pan-\nel to select a concurrent pro-\ngram under test;\n\nStep 2: Click the \"Upload\" bu-\ntton on the \"Test Case Upload-\ning\" panel to upload test sui-\nt of the program;\n   (1) the table will show all\n       test cases;\n   (2) the right text area will\n       show the content of the\n       test case you selected.\n\nStep 3: Click the \"Parse\" but-\nton on the \"Show Shared Varia-\nble of Program\" to parse the \nprogram and the shared variab-\nle will be shown on the bottom\ntable;\n\nStep 4: Click the \"Next>>\" bu-\ntton;\n\nStep 5: Click the \"Execute\" bu-\ntton on the \"First Execution\" \npanel,the source execution seq-\nuence and output will be shown\non the bottom;\n\nStep 6: Click \"Match\" button on\nthe \"Pattern Matching\" panel to\nobtain patterns that can be used\nto gernate follow-up execution \nsequence;\n\nStep 7: Choose a MP and click \n\"Generate\" button on the \"Gene-\nration\" panel to generate follow\n-up execution sequence;\n\nStep 8: Click \"Execute\" button \non the \"Second Execution\" panel,\nthen the result of follow-up t-\nest case will be shown on the \nbottom area;\n\nStep 9:Click the \"Download\" bu-\ntton to download the testing \nreport. ");
        procedure.setAutoscrolls(false);
        procedure.setBorder(null);
        procedure.setMaximumSize(new java.awt.Dimension(101, 294));
        firstSP.setViewportView(procedure);

        TCUploadPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Test Case Uploading", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        TCUploadLable.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        TCUploadLable.setText("Click this button to upload test suit");

        uploadButton.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        uploadButton.setText("Upload");
        uploadButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uploadButtonMouseClicked(evt);
            }
        });
        uploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadButtonActionPerformed(evt);
            }
        });

        jScrollPaneTS.setBorder(null);
        jScrollPaneTS.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTableTS.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTableTS.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {"1", "Test case name_1"},
                        {"2", "Test case name_2"},
                        {"3", "Test case name_3"},
                        {"4", "Test case name_4"},
                        {"5", "Test case name_5"},
                        {"6", "Test case name_6"},
                        {"7", "Test case name_7"},
                        {"8", "Test case name_8"},
                        {"9", "Test case name_9"},
                        {"10", "Test case name_10"},
                        {"11", "Test case name_11"},
                        {"12", "Test case name_12"}
                },
                new String [] {
                        "Test Case ID", "Test Case Name"
                }
        ));
        jTableTS.getTableHeader().setResizingAllowed(false);
        jTableTS.getTableHeader().setReorderingAllowed(false);
        jTableTS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableTSMouseClicked(evt);
            }
        });
        jScrollPaneTS.setViewportView(jTableTS);

        jScrollPaneTC.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTC.setViewportBorder(javax.swing.BorderFactory.createTitledBorder(null, "Test Case Content", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        jTextAreaTC.setColumns(10);
        jTextAreaTC.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jTextAreaTC.setRows(5);
        jTextAreaTC.setTabSize(5);
        jTextAreaTC.setMaximumSize(new java.awt.Dimension(774, 44));
        jScrollPaneTC.setViewportView(jTextAreaTC);

        javax.swing.GroupLayout TCUploadPanelLayout = new javax.swing.GroupLayout(TCUploadPanel);
        TCUploadPanel.setLayout(TCUploadPanelLayout);
        TCUploadPanelLayout.setHorizontalGroup(
                TCUploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(TCUploadPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(TCUploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(TCUploadLable)
                                        .addComponent(jScrollPaneTS, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(TCUploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(TCUploadPanelLayout.createSequentialGroup()
                                                .addComponent(uploadButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(267, 267, 267))
                                        .addComponent(jScrollPaneTC, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
        );
        TCUploadPanelLayout.setVerticalGroup(
                TCUploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TCUploadPanelLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(TCUploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(TCUploadLable, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(uploadButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                                .addGroup(TCUploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPaneTS, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPaneTC, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
        );

        sharedVariablePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Shared variable of Program Display", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        praseLable.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        praseLable.setText("Click this button to parse program under test and obtain the shared variable:");

        praseButton.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        praseButton.setText("Parse");
        praseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                praseButtonMouseClicked(evt);
            }
        });
        praseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                praseButtonActionPerformed(evt);
            }
        });

        jScrollPanesharedVariable.setBorder(null);

        jTableSharedVariable.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTableSharedVariable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null},
                        {null, null},
                        {null, null},
                        {null, null}
                },
                new String [] {
                        "Shared Varible ID", "Shared Variable Name"
                }
        ));
        jScrollPanesharedVariable.setViewportView(jTableSharedVariable);

        javax.swing.GroupLayout sharedVariablePanelLayout = new javax.swing.GroupLayout(sharedVariablePanel);
        sharedVariablePanel.setLayout(sharedVariablePanelLayout);
        sharedVariablePanelLayout.setHorizontalGroup(
                sharedVariablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(sharedVariablePanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(praseLable)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 147, Short.MAX_VALUE)
                                .addComponent(praseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21))
                        .addGroup(sharedVariablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(sharedVariablePanelLayout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jScrollPanesharedVariable, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
                                        .addContainerGap()))
        );
        sharedVariablePanelLayout.setVerticalGroup(
                sharedVariablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sharedVariablePanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(sharedVariablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(praseLable)
                                        .addComponent(praseButton))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(sharedVariablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sharedVariablePanelLayout.createSequentialGroup()
                                        .addGap(0, 46, Short.MAX_VALUE)
                                        .addComponent(jScrollPanesharedVariable, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        programPan.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Concurrent Program Under Test Selection", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N
        programPan.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        programPathLable1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        programPathLable1.setText("The path of program under test:");

        programfield1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        programButt1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        programButt1.setText("Browse");
        programButt1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                programButt1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout programPanLayout = new javax.swing.GroupLayout(programPan);
        programPan.setLayout(programPanLayout);
        programPanLayout.setHorizontalGroup(
                programPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(programPanLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(programPathLable1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(programfield1)
                                .addGap(29, 29, 29)
                                .addComponent(programButt1)
                                .addContainerGap())
        );
        programPanLayout.setVerticalGroup(
                programPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, programPanLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(programPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(programPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(programfield1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(programButt1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                        .addComponent(programPathLable1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonBack.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonBack.setText("<< Back");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        jButtonNext.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonNext.setText("Next>>");

        jButtonExit.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonExit.setText("Exit");
        jButtonExit.setPreferredSize(new java.awt.Dimension(69, 23));

        javax.swing.GroupLayout testPerartionPanelLayout = new javax.swing.GroupLayout(testPerartionPanel);
        testPerartionPanel.setLayout(testPerartionPanelLayout);
        testPerartionPanelLayout.setHorizontalGroup(
                testPerartionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(testPerartionPanelLayout.createSequentialGroup()
                                .addGroup(testPerartionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(testPerartionPanelLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(firstSP, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(testPerartionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(TCUploadPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 683, Short.MAX_VALUE)
                                                        .addComponent(sharedVariablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(programPan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(testPerartionPanelLayout.createSequentialGroup()
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButtonBack)
                                                .addGap(33, 33, 33)
                                                .addComponent(jButtonNext)
                                                .addGap(31, 31, 31)
                                                .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
        );
        testPerartionPanelLayout.setVerticalGroup(
                testPerartionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(testPerartionPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(testPerartionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(testPerartionPanelLayout.createSequentialGroup()
                                                .addComponent(programPan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(TCUploadPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(sharedVariablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(firstSP, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(testPerartionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonBack)
                                        .addComponent(jButtonNext)
                                        .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(20, Short.MAX_VALUE))
        );

        jTabbedPaneMain.addTab("Test Preparation", testPerartionPanel);

        jLabelProgram.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabelProgram.setText("Program Under Test:");

        jLabelTC.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabelTC.setText("Test Case Uploaded:");

        programInfoField.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        programInfoField.setToolTipText("");
        programInfoField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                programInfoFieldActionPerformed(evt);
            }
        });

        tcInfoField.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tcInfoField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tcInfoFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout infoPanLayout = new javax.swing.GroupLayout(infoPan);
        infoPan.setLayout(infoPanLayout);
        infoPanLayout.setHorizontalGroup(
                infoPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(infoPanLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(infoPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabelProgram)
                                        .addComponent(jLabelTC))
                                .addGap(18, 18, 18)
                                .addGroup(infoPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(tcInfoField)
                                        .addComponent(programInfoField))
                                .addGap(102, 102, 102))
        );
        infoPanLayout.setVerticalGroup(
                infoPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(infoPanLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(infoPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabelProgram)
                                        .addComponent(programInfoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(infoPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabelTC)
                                        .addComponent(tcInfoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        generateFSSP.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Follow-up Execut Sequence Generation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N
        generateFSSP.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTabbedPaneGenerateFS.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        jLabelMatch.setText("Click this button to match pattern:");

        jButtonMatch.setText("Match");
        jButtonMatch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jTablePattern.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {"1", "R_u(l)W", "NO"},
                        {"2", null, "NO"},
                        {"3", null, "NO"},
                        {"4", null, "NO"},
                        {"5", null, "NO"},
                        {"6", null, "NO"},
                        {"7", null, "NO"},
                        {"8", null, "NO"},
                        {"9", null, "NO"},
                        {"10", null, "NO"},
                        {"11", null, "NO"},
                        {"12", null, "NO"},
                        {"13", null, "NO"},
                        {"14", null, "NO"}
                },
                new String [] {
                        "Pattern ID", "Pattern", "isMatched"
                }
        ));
        jScrollPanePattern.setViewportView(jTablePattern);

        javax.swing.GroupLayout matchPanelLayout = new javax.swing.GroupLayout(matchPanel);
        matchPanel.setLayout(matchPanelLayout);
        matchPanelLayout.setHorizontalGroup(
                matchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(matchPanelLayout.createSequentialGroup()
                                .addGroup(matchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(matchPanelLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jLabelMatch))
                                        .addGroup(matchPanelLayout.createSequentialGroup()
                                                .addGap(64, 64, 64)
                                                .addComponent(jButtonMatch)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPanePattern, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(546, Short.MAX_VALUE))
        );
        matchPanelLayout.setVerticalGroup(
                matchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(matchPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(matchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(matchPanelLayout.createSequentialGroup()
                                                .addComponent(jLabelMatch)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButtonMatch))
                                        .addComponent(jScrollPanePattern, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(514, Short.MAX_VALUE))
        );

        jTabbedPaneGenerateFS.addTab("Pattern Matching", matchPanel);

        jLabelSelectMP.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabelSelectMP.setText("Select MP:");

        mpComBox.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        mpComBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MP1", "MP2", "MP3", "MP4", "MP5", "MP6", "MP7", "MP8", "MP9", "MP10", "MP11", "MP12", "MP13", "MP14" }));
        mpComBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxMPItemStateChanged(evt);
            }
        });

        generateBut.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        generateBut.setText("Generate");
        generateBut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonGenerateMouseClicked(evt);
            }
        });

        fsSP.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Follow-up Execute Sequence", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N
        fsSP.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        fsArea.setColumns(20);
        fsArea.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        fsArea.setRows(5);
        fsSP.setViewportView(fsArea);

        jLabelGenerate.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabelGenerate.setText("Click this button to generate follow-up execution sequence:");

        javax.swing.GroupLayout generatePanelLayout = new javax.swing.GroupLayout(generatePanel);
        generatePanel.setLayout(generatePanelLayout);
        generatePanelLayout.setHorizontalGroup(
                generatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, generatePanelLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelSelectMP)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mpComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(jLabelGenerate)
                                .addGap(18, 18, 18)
                                .addComponent(generateBut)
                                .addGap(562, 562, 562))
                        .addGroup(generatePanelLayout.createSequentialGroup()
                                .addComponent(fsSP, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
        );
        generatePanelLayout.setVerticalGroup(
                generatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(generatePanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(generatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabelSelectMP)
                                        .addComponent(mpComBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(generateBut)
                                        .addComponent(jLabelGenerate))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fsSP, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(504, Short.MAX_VALUE))
        );

        jTabbedPaneGenerateFS.addTab("Generation", generatePanel);

        generateFSSP.setViewportView(jTabbedPaneGenerateFS);

        firstExePan.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "First Execution", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        jLabelExe.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabelExe.setText("Click this button to execute test:");

        jButtonExe.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonExe.setText("Execute");
        jButtonExe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonExeMouseClicked(evt);
            }
        });
        jButtonExe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExeActionPerformed(evt);
            }
        });

        jScrollPaneSS.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Source Execution Sequence", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N
        jScrollPaneSS.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTextAreaSS.setColumns(20);
        jTextAreaSS.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jTextAreaSS.setRows(5);
        jScrollPaneSS.setViewportView(jTextAreaSS);

        javax.swing.GroupLayout firstExePanLayout = new javax.swing.GroupLayout(firstExePan);
        firstExePan.setLayout(firstExePanLayout);
        firstExePanLayout.setHorizontalGroup(
                firstExePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(firstExePanLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(firstExePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(firstExePanLayout.createSequentialGroup()
                                                .addComponent(jLabelExe)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 211, Short.MAX_VALUE)
                                                .addComponent(jButtonExe, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(88, 88, 88))
                                        .addComponent(jScrollPaneSS))
                                .addContainerGap())
        );
        firstExePanLayout.setVerticalGroup(
                firstExePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(firstExePanLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(firstExePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabelExe)
                                        .addComponent(jButtonExe))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPaneSS, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
        );

        firstSP1.setBorder(javax.swing.BorderFactory.createTitledBorder("Procedure"));

        procedure1.setEditable(false);
        procedure1.setBackground(new java.awt.Color(240, 240, 240));
        procedure1.setColumns(5);
        procedure1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        procedure1.setRows(5);
        procedure1.setTabSize(5);
        procedure1.setText("\nStep 1: Click the \"Browse\" bu-\ntton on the \"Concurrent Progr-\nam Under Test Selection \" pan-\nel to select a concurrent pro-\ngram under test;\n\nStep 2: Click the \"Upload\" bu-\ntton on the \"Test Case Upload-\ning\" panel to upload test sui-\nt of the program;\n   (1) the table will show all\n       test cases;\n   (2) the right text area will\n       show the content of the\n       test case you selected.\n\nStep 3: Click the \"Parse\" but-\nton on the \"Show Shared Varia-\nble of Program\" to parse the \nprogram and the shared variab-\nle will be shown on the bottom\ntable;\n\nStep 4: Click the \"Next>>\" bu-\ntton;\n\nStep 5: Click the \"Execute\" bu-\ntton on the \"First Execution\" \npanel,the source execution seq-\nuence and output will be shown\non the bottom;\n\nStep 6: Click \"Match\" button on\nthe \"Pattern Matching\" panel to\nobtain patterns that can be used\nto gernate follow-up execution \nsequence;\n\nStep 7: Choose a MP and click \n\"Generate\" button on the \"Gene-\nration\" panel to generate follow\n-up execution sequence;\n\nStep 8: Click \"Execute\" button \non the \"Second Execution\" panel,\nthen the result of follow-up t-\nest case will be shown on the \nbottom area;\n\nStep 9:Click the \"Download\" bu-\ntton to download the testing \nreport. ");
        procedure1.setAutoscrolls(false);
        procedure1.setBorder(null);
        procedure1.setMaximumSize(new java.awt.Dimension(101, 294));
        firstSP1.setViewportView(procedure1);

        jButtonBack2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonBack2.setText("<< Back");
        jButtonBack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBack2ActionPerformed(evt);
            }
        });

        jButtonNext2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonNext2.setText("Next>>");

        jButtonExit2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonExit2.setText("Exit");
        jButtonExit2.setPreferredSize(new java.awt.Dimension(69, 23));

        secExePan1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Second Execution", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        jLabelExe2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabelExe2.setText("Click this button to execute test:");

        jButtonExe2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonExe2.setText("Execute");
        jButtonExe2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExe2ActionPerformed(evt);
            }
        });

        jScrollPaneFO.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Follow-up Output", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        jTextAreaFO.setColumns(20);
        jTextAreaFO.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTextAreaFO.setRows(5);
        jScrollPaneFO.setViewportView(jTextAreaFO);

        javax.swing.GroupLayout secExePan1Layout = new javax.swing.GroupLayout(secExePan1);
        secExePan1.setLayout(secExePan1Layout);
        secExePan1Layout.setHorizontalGroup(
                secExePan1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, secExePan1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(secExePan1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jScrollPaneFO)
                                        .addGroup(secExePan1Layout.createSequentialGroup()
                                                .addComponent(jLabelExe2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButtonExe2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(82, 82, 82)))
                                .addContainerGap())
        );
        secExePan1Layout.setVerticalGroup(
                secExePan1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(secExePan1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(secExePan1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabelExe2)
                                        .addComponent(jButtonExe2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPaneFO, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );

        jButtonDpwnload.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonDpwnload.setText("Download Test Report");

        javax.swing.GroupLayout executionPanelLayout = new javax.swing.GroupLayout(executionPanel);
        executionPanel.setLayout(executionPanelLayout);
        executionPanelLayout.setHorizontalGroup(
                executionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(executionPanelLayout.createSequentialGroup()
                                .addGroup(executionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(executionPanelLayout.createSequentialGroup()
                                                .addComponent(jButtonDpwnload)
                                                .addGap(40, 40, 40)
                                                .addComponent(jButtonBack2)
                                                .addGap(33, 33, 33)
                                                .addComponent(jButtonNext2)
                                                .addGap(31, 31, 31)
                                                .addComponent(jButtonExit2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(executionPanelLayout.createSequentialGroup()
                                                .addComponent(firstSP1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(executionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(generateFSSP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                                        .addComponent(infoPan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(secExePan1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(firstExePan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addContainerGap())
        );
        executionPanelLayout.setVerticalGroup(
                executionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(executionPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(executionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(firstSP1, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(executionPanelLayout.createSequentialGroup()
                                                .addComponent(infoPan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(firstExePan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(generateFSSP, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(secExePan1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(executionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButtonBack2)
                                        .addComponent(jButtonNext2)
                                        .addComponent(jButtonExit2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonDpwnload))
                                .addContainerGap(20, Short.MAX_VALUE))
        );

        jTabbedPaneMain.addTab("Test Case Execution", executionPanel);

        getContentPane().add(jTabbedPaneMain);
        jTabbedPaneMain.getAccessibleContext().setAccessibleName("First Execution");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tcInfoFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tcInfoFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tcInfoFieldActionPerformed

    private void uploadButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadButtonMouseClicked
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.showDialog(new JLabel(), "选择测试用例文件夹");
        File folder = chooser.getSelectedFile();
        tcPath = folder.getAbsolutePath().toString();

        //获取选择的文件夹的绝对路径
        String path = folder.getAbsolutePath().toString();
        //获取文件夹下所有的文件
        Vector targetFiles = new Vector();
        getJavacArgForDir(path, "", targetFiles);

        //重新设置表格内容
        jTableTS.setModel(new FileTableModel(targetFiles));


        // TODO add your handling code here:
    }//GEN-LAST:event_uploadButtonMouseClicked

    private void praseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_praseButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_praseButtonActionPerformed

    private void jButtonExeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonExeActionPerformed

    private void programInfoFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_programInfoFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_programInfoFieldActionPerformed

    private void programButt1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_programButt1MouseClicked
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        chooser.showDialog(new JLabel(), "选择待测程序");
        File file = chooser.getSelectedFile();
        programfield1.setText(file.getAbsoluteFile().toString());
        int index = file.getAbsoluteFile().toString().lastIndexOf("\\");
        programName = file.getAbsoluteFile().toString().substring(index+1);
        programInfoField.setText(programName);// TODO add your handling code here:
        programPath = file.getAbsolutePath().toString().substring(0,index+1);
    }//GEN-LAST:event_programButt1MouseClicked

    private void praseButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_praseButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_praseButtonMouseClicked

    private void uploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uploadButtonActionPerformed

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jButtonBack2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBack2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonBack2ActionPerformed

    private void jButtonExe2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExe2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonExe2ActionPerformed

    private void jButtonExeMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        showTraceContent();

//        JUnitCore junit = new JUnitCore();
//
//        junit.run(edu.tamu.aser.tests.account.AccountTest.class);
//        String tcClass = "E:\\CMT\\CMTJmcr\\mcr-test\\out\\edu.tamu.aser.tests.account.AccountTest";

//        String tcClass = "edu.tamu.aser.tests." + tcPath.split("tests.")[1] + "." + tcName.split("\\.")[0];
//
//        try {
//            Class cls = Class.forName(tcClass);
//            junit.run(cls);
//            String text = ExploreSeedInterleavings.getString.toString();
//            jTextAreaSS.append(text);
//        } catch (ClassNotFoundException e) {
//            e.printStackTrace();
//        }
//        String cmdstr1 = "cmd /c javac end.tamu.aser.tests.account.AccountTest.java";
//        try {
//            Runtime.getRuntime().exec(cmdstr1);
//        } catch (IOException e) {
//            e.printStackTrace();
//        }
//
//        String cmdstr = "cmd /c java -javaagent:CMTJmcr/libs/agent.jar edu.tamu.aser.tests.account.AccountTest";
//        Runtime runtime = Runtime.getRuntime();
//        try{
//            Process p = runtime.exec(cmdstr);
//            BufferedInputStream in = new BufferedInputStream(p.getInputStream());
//            BufferedReader inBr = new BufferedReader(new InputStreamReader(in));
//            String lineStr;
//            while((lineStr = inBr.readLine()) != null) {
//                System.out.println(lineStr);
//
//            }
//            p.waitFor();
//
//            inBr.close();
//            in.close();
//        }catch(Exception e){
//            e.printStackTrace();
//        }
//        String cmdstr = "cmd /c java -classpath .; -jar ../lib/account.jar";
//        System.out.println(cmdstr);
//        Runtime runtime = Runtime.getRuntime();
//        try{
//            Process p = runtime.exec(cmdstr);
//            BufferedInputStream in = new BufferedInputStream(p.getInputStream());
//            BufferedReader inBr = new BufferedReader(new InputStreamReader(in));
//            String lineStr;
//            while((lineStr = inBr.readLine()) != null) {
//                System.out.println(lineStr);
//                if (p.waitFor() != 0) {
//                    if (p.exitValue() == 1) {//p.exitValue()==0表示正常结束，1：非正常结束  
//                        System.err.println("命令执行失败!");
//                    }
//                }
//            }
//
//            inBr.close();
//            in.close();
//        }catch(Exception e){
//            e.printStackTrace();
//        }
//        String text = ExploreSeedInterleavings.getString.toString();

//        try {
//            String methodName = "main";
//            String className = tcPath.split("java.")[1].replaceAll("\\\\","\\.")+"."+tcName.split("\\.")[0];
//            Class cls = Class.forName(className);
//            Object object = cls.newInstance();
//            Method m = object.getClass().getDeclaredMethod(methodName,String[].class);
//            String[] argsArray = new String[0];
//            m.invoke(object,(Object)argsArray);
//        } catch (Exception e) {
//            e.printStackTrace();
//        }

    }

    private void jTableTSMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int row = jTableTS.getSelectedRow();
        tcName = jTableTS.getValueAt(row,1).toString();
        tcInfoField.setText(tcName);
        showFileContent();

    }

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        String path = "F:\\gengning\\workplace\\CMT\\trace\\" + programName.split("\\.")[0]+".txt";
//        System.out.println(path);
//        List<String> groups = obtp.obtainPattern("F:\\gengning\\workplace\\CMT\\trace\\" + programName.split("\\.")[0]+".txt");

        String isMatchg1 = obtpg1.obtainPattern(obtpg1.getTrace(path));
        String isMatchg2 = obtpg2.obtainPattern(obtpg2.getTrace(path));
        String isMatchg3 = obtpg3.obtainPattern(obtpg3.getTrace(path));
        String isMatchg4 = obtpg4.obtainPattern(obtpg4.getTrace(path));
        String isMatchg5 = obtpg5.obtainPattern(obtpg5.getTrace(path));
        String isMatchg6 = obtpg6.obtainPattern(obtpg6.getTrace(path));

        groups.add(isMatchg1);
        groups.add(isMatchg2);
        groups.add(isMatchg3);
        groups.add(isMatchg4);
        groups.add(isMatchg5);
        groups.add(isMatchg6);
//        System.out.println(groups);

        mpComBox.removeAllItems();
//        if (groups.size()>0) {
            for (int i = 0; i < groups.size(); i++) {
                if (groups.get(i)!=null) {
                    if (groups.get(i).equals("g1")) {
                        jTablePattern.setValueAt("YES", 0, 2);
                        mpComBox.addItem("MP1");
                        jTablePattern.setValueAt("YES", 3, 2);
                        mpComBox.addItem("MP4");
                    }
                    if (groups.get(i).equals("g2")) {
                        jTablePattern.setValueAt("YES", 1, 2);
                        mpComBox.addItem("MP2");
                    }
                    if (groups.get(i).equals("g3")) {
                        jTablePattern.setValueAt("YES", 2, 2);
                        mpComBox.addItem("MP3");
                    }
                    if (groups.get(i).equals("g4")) {
                        jTablePattern.setValueAt("YES", 4, 2);
                        mpComBox.addItem("MP5");
                    }
                    if (groups.get(i).equals("g5")) {
                        jTablePattern.setValueAt("YES", 5, 2);
                        mpComBox.addItem("MP6");
                        jTablePattern.setValueAt("YES", 6, 2);
                        mpComBox.addItem("MP7");
                        jTablePattern.setValueAt("YES", 7, 2);
                        mpComBox.addItem("MP8");
                    }
                    if (groups.get(i).equals("g6")) {
                        jTablePattern.setValueAt("YES", 8, 2);
                        mpComBox.addItem("MP9");
                        jTablePattern.setValueAt("YES", 9, 2);
                        mpComBox.addItem("MP10");
                        jTablePattern.setValueAt("YES", 10, 2);
                        mpComBox.addItem("MP11");
                        jTablePattern.setValueAt("YES", 11, 2);
                        mpComBox.addItem("MP12");
                        jTablePattern.setValueAt("YES", 12, 2);
                        mpComBox.addItem("MP13");
                        jTablePattern.setValueAt("YES", 13, 2);
                        mpComBox.addItem("MP14");
                    }
                }
            }
//        }
    }

    private void jComboBoxMPItemStateChanged(java.awt.event.ItemEvent evt) {
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED){
            myMP = (String) mpComBox.getSelectedItem();
        }
    }

    private void jButtonGenerateMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        sourceSeq = obtpg1.getTrace("F:\\gengning\\workplace\\CMT\\trace\\" + programName.split("\\.")[0]+".txt");

        System.out.println(myMP);

        if (myMP.equals("MP1")){
            MetamorphicPattern mp1 =new MP1();
            followupSeq = mp1.followUpSeq(sourceSeq);
        }else if (myMP.equals("MP2")){

            MPFactory mpFactory = new MPFactory();
            mpFactory.productMP(myMP);
        }else if (myMP.equals("MP3")){

        }else if (myMP.equals("MP4")){
            MetamorphicPattern mp4 = new MP4();
            followupSeq = mp4.followUpSeq(sourceSeq);

        }else if (myMP.equals("MP5")){

        }else if (myMP.equals("MP6")){

        }else if (myMP.equals("MP7")){

        }else if (myMP.equals("MP8")){

        }else if (myMP.equals("MP9")){

        }else if (myMP.equals("MP10")){

        }else if (myMP.equals("MP11")){

        }else if (myMP.equals("MP12")){

        }else if (myMP.equals("MP13")){

        }else {

        }


        try {

                for (String event : followupSeq) {
                    fsArea.removeAll();
                    fsArea.append(event + "\n");
                }
        }catch (NullPointerException e){
            e.printStackTrace();
            fsArea.removeAll();
            fsArea.append("NO REACHABLED SEQUENCE!!");
        }

    }

    private void showFileContent(){
        try {
            String strLine;
            File myFile = new File(tcPath, tcName);
            String blank_str;
            LineNumberReader lReader = new LineNumberReader(new FileReader(myFile));

            Document ddoc = jTextAreaTC.getDocument();

            while ((strLine = lReader.readLine()) != null) {
                blank_str = "";
                int del = (new Integer(lReader.getLineNumber())).toString().length();
                for (int k = 0; k < 5 - del; k++) {
                    blank_str = blank_str + " ";
                }
                ddoc.insertString(ddoc.getLength(), lReader.getLineNumber() + blank_str,null);
                ddoc.insertString(ddoc.getLength(), strLine + "\n", null);
            }
            lReader.close();

        } catch (Exception e) {
            System.err.println(" [error] " + e);
        }
    }

    private void showTraceContent(){
        File file = null;
        try { //以缓冲区方式读取文件内容
            jTextAreaSS.setText("");
            file = new File("F:\\gengning\\workplace\\CMT\\trace\\" + programName.split("\\.")[0]+".txt");
            FileReader filereader = new FileReader(file);
            BufferedReader bufferreader = new BufferedReader(filereader);
            String aline;
            while ((aline = bufferreader.readLine()) != null) {
                //按行读取文本，显示在TEXTAREA中

                if (aline.length() > 1) {

                    Thread.sleep(500);
                    jTextAreaSS.append(aline + "\r\n");
                }
            }
            filereader.close();
            bufferreader.close();

        } catch (IOException e) {
            System.out.println(e);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

    }




    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CMTester1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(CMTester1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(CMTester1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            Logger.getLogger(CMTester1.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CMTester1().setVisible(true);
            }
        });
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel TCUploadLable;
    private javax.swing.JPanel TCUploadPanel;
    private javax.swing.JPanel executionPanel;
    private javax.swing.JPanel firstExePan;
    private javax.swing.JScrollPane firstSP;
    private javax.swing.JScrollPane firstSP1;
    private javax.swing.JTextArea fsArea;
    private javax.swing.JScrollPane fsSP;
    private javax.swing.JButton generateBut;
    private javax.swing.JScrollPane generateFSSP;
    private javax.swing.JPanel generatePanel;
    private javax.swing.JPanel infoPan;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonBack2;
    private javax.swing.JButton jButtonDpwnload;
    private javax.swing.JButton jButtonExe;
    private javax.swing.JButton jButtonExe2;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonExit2;
    private javax.swing.JButton jButtonMatch;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonNext2;
    private JLabel jLabelExe;
    private JLabel jLabelExe2;
    private JLabel jLabelGenerate;
    private JLabel jLabelMatch;
    private JLabel jLabelProgram;
    private JLabel jLabelSelectMP;
    private JLabel jLabelTC;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPaneFO;
    private javax.swing.JScrollPane jScrollPanePattern;
    private javax.swing.JScrollPane jScrollPaneSS;
    private javax.swing.JScrollPane jScrollPaneTC;
    private javax.swing.JScrollPane jScrollPaneTS;
    private javax.swing.JScrollPane jScrollPanesharedVariable;
    private javax.swing.JTabbedPane jTabbedPaneGenerateFS;
    private javax.swing.JTabbedPane jTabbedPaneMain;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTablePattern;
    private javax.swing.JTable jTableSharedVariable;
    private javax.swing.JTable jTableTS;
    private javax.swing.JTextArea jTextAreaFO;
    private javax.swing.JTextArea jTextAreaSS;
    private javax.swing.JTextArea jTextAreaTC;
    private javax.swing.JPanel matchPanel;
    private javax.swing.JComboBox<String> mpComBox;
    private javax.swing.JButton praseButton;
    private JLabel praseLable;
    private javax.swing.JTextArea procedure;
    private javax.swing.JTextArea procedure1;
    private javax.swing.JButton programButt1;
    private javax.swing.JTextField programInfoField;
    private javax.swing.JPanel programPan;
    private JLabel programPathLable1;
    private javax.swing.JTextField programfield1;
    private javax.swing.JPanel secExePan1;
    private javax.swing.JPanel sharedVariablePanel;
    private javax.swing.JTextField tcInfoField;
    private javax.swing.JPanel testPerartionPanel;
    private javax.swing.JButton uploadButton;
    // End of variables declaration//GEN-END:variables
}
