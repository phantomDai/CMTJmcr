/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.cmtester;

import algorithm.mp.MPFactory4PUT;
import algorithm.mp.MetamorphicPattern;
import algorithm.obtainpattern.ObtainPattern;
import algorithm.obtainpattern.OBTP1;
import algorithm.obtainpattern.OBTP2;
import algorithm.obtainpattern.OBTP3;
import algorithm.obtainpattern.OBTP4;
import algorithm.obtainpattern.OBTP5;
import algorithm.obtainpattern.OBTP6;

import java.io.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.text.Document;

import static com.mycompany.cmtester.GetFO.printFO4Acc;
import static com.mycompany.cmtester.GetFO.printFO4Air;
import static com.mycompany.cmtester.GetFO.printFO4Cri;
import static com.mycompany.cmtester.TCList.getJavacArgForDir;

import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author GN
 */
public class CMTester extends javax.swing.JFrame {

    //待测程序路径和程序名
    public String programPath;
    public static String programName;
    
    //待测程序所有的测试用例
    public Vector targetFiles = new Vector();

    //单个测试用例路径
    public String tcPath;

    //单个测试用例文件名
    public String tcName;

    long startTime;

    int TCnum;
    
    public static String myMP;
    private final String SEPath = "F:\\CMT\\SE\\";
    private final String FullPath = "F:\\CMT\\trace\\";
    private final String SVPath = "F:\\CMT\\sharedvariable\\";
   
    private List<String> groups = new ArrayList<>();
    
    ObtainPattern obtpg1 = new OBTP1();
    ObtainPattern obtpg2 = new OBTP2();
    ObtainPattern obtpg3 = new OBTP3();
    ObtainPattern obtpg4 = new OBTP4();
    ObtainPattern obtpg5 = new OBTP5();
    ObtainPattern obtpg6 = new OBTP6();
    
    public List<String> followupSeq = new ArrayList<>();
    public List<String> sourceSeq = new ArrayList<>();

    /**
     * Creates new form CMTester
     */
    public CMTester() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneGenerateFS1 = new javax.swing.JTabbedPane();
        matchPanel1 = new javax.swing.JPanel();
        jLabelMatch1 = new JLabel();
        jButtonMatch1 = new javax.swing.JButton();
        jScrollPanePattern1 = new javax.swing.JScrollPane();
        jTablePattern1 = new javax.swing.JTable();
        generatePanel1 = new javax.swing.JPanel();
        jLabelSelectMP1 = new JLabel();
        mpComBox1 = new javax.swing.JComboBox<>();
        generateBut1 = new javax.swing.JButton();
        fsSP1 = new javax.swing.JScrollPane();
        fsArea1 = new javax.swing.JTextArea();
        jLabelGenerate1 = new JLabel();
        jTabbedPaneMain = new javax.swing.JTabbedPane();
        testPerartionPanel = new javax.swing.JPanel();
        firstSP = new javax.swing.JScrollPane();
        procedure = new javax.swing.JTextArea();
        TCUploadPanel = new javax.swing.JPanel();
        TCUploadLable = new JLabel();
        uploadButton = new javax.swing.JButton();
        jScrollPaneTS = new javax.swing.JScrollPane();
        jTableTS = new javax.swing.JTable();
        jScrollPaneTC = new javax.swing.JScrollPane();
        jTextAreaTC = new javax.swing.JTextArea();
        sharedVariablePanel = new javax.swing.JPanel();
        praseLable = new JLabel();
        praseButton = new javax.swing.JButton();
        jScrollPanesharedVariable = new javax.swing.JScrollPane();
        jTableSharedVariable = new javax.swing.JTable();
        programPan = new javax.swing.JPanel();
        programPathLable1 = new JLabel();
        programfield1 = new javax.swing.JTextField();
        programButt1 = new javax.swing.JButton();
        jButtonBack = new javax.swing.JButton();
        jButtonNext = new javax.swing.JButton();
        jButtonExit = new javax.swing.JButton();
        executionPanel = new javax.swing.JPanel();
        infoPan = new javax.swing.JPanel();
        jLabelProgram = new JLabel();
        jLabelTC = new JLabel();
        programInfoField = new javax.swing.JTextField();
        tcInfoField = new javax.swing.JTextField();
        firstExePan = new javax.swing.JPanel();
        jLabelExe = new JLabel();
        jButtonExe = new javax.swing.JButton();
        jScrollPaneSS = new javax.swing.JScrollPane();
        jTextAreaSS = new javax.swing.JTextArea();
        firstSP1 = new javax.swing.JScrollPane();
        procedure1 = new javax.swing.JTextArea();
        jButtonBack2 = new javax.swing.JButton();
        jButtonNext2 = new javax.swing.JButton();
        jButtonExit2 = new javax.swing.JButton();
        secExePan1 = new javax.swing.JPanel();
        jLabelExe2 = new JLabel();
        jButtonExe2 = new javax.swing.JButton();
        jScrollPaneFO = new javax.swing.JScrollPane();
        jTextAreaFO = new javax.swing.JTextArea();
        jButtonDpwnload = new javax.swing.JButton();
        jPanelFSGeneration = new javax.swing.JPanel();
        jTabbedPaneMatching = new javax.swing.JTabbedPane();
        jPanelMatching = new javax.swing.JPanel();
        jLabelMatch = new JLabel();
        jButtonMatch = new javax.swing.JButton();
        jScrollPanePattern = new javax.swing.JScrollPane();
        jTablePattern = new javax.swing.JTable();
        jPanelGeneration = new javax.swing.JPanel();
        jLabelMP = new JLabel();
        jComboBoxMP = new javax.swing.JComboBox<>();
        jLabelGenerate = new JLabel();
        jButtonGenerate = new javax.swing.JButton();
        jScrollPaneFS = new javax.swing.JScrollPane();
        jTextAreaFS = new javax.swing.JTextArea();

        jTabbedPaneGenerateFS1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        jLabelMatch1.setText("Click this button to match pattern:");

        jButtonMatch1.setText("Match");

        jTablePattern1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "R_u(l)W_u'(l)W_u(l)", "No"},
                {"2", "R_u(l)W_u'(l)R_u(l)", "No"},
                {"3", "W_u(l)R_u'(l)W_u(l)", "No"},
                {"4", "W_u(l)W_u'(l)R_u(l)", "No"},
                {"5", "W_u(l)W_u'(l)W_u(l)", "No"},
                {"6", "W_u(l_1)W_u'(l_1)W_u'(l_2)W_u(l_2)", "No"},
                {"7", "W_u(l_1)W_u'(l_2)W_u'(l_1)W_u(l_2)", "No"},
                {"8", "W_u(l_1)W_u'(l_2)W_u'(l_2)W_u(l_1)", "No"},
                {"9", "W_u(l_1)R_u'(l_1)R_u'(l_2)W_u(l_2)", "No"},
                {"10", "W_u(l_1)R_u'(l_2)R_u'(l_1)W_u(l_2)", "No"},
                {"11", "R_u(l_1)W_u'(l_1)W_u'(l_2)R_u(l_2)", "No"},
                {"12", "R_u(l_1)W_u'(l_2)W_u'(l_1)R_u(l_2)", "No"},
                {"13", "R_u(l_1)W_u'(l_2)R_u(l_2)W_u'(l_1)", "No"},
                {"14", "W_u(l_1)R_u'(l_2)W_u(l_2)R_u'(l_1)", "No"}
            },
            new String [] {
                "Pattern ID", "Pattern", "isMatched"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPanePattern1.setViewportView(jTablePattern1);
        if (jTablePattern1.getColumnModel().getColumnCount() > 0) {
            jTablePattern1.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTablePattern1.getColumnModel().getColumn(1).setPreferredWidth(150);
            jTablePattern1.getColumnModel().getColumn(2).setPreferredWidth(20);
        }

        javax.swing.GroupLayout matchPanel1Layout = new javax.swing.GroupLayout(matchPanel1);
        matchPanel1.setLayout(matchPanel1Layout);
        matchPanel1Layout.setHorizontalGroup(
            matchPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(matchPanel1Layout.createSequentialGroup()
                .addGroup(matchPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(matchPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelMatch1))
                    .addGroup(matchPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jButtonMatch1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPanePattern1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(546, Short.MAX_VALUE))
        );
        matchPanel1Layout.setVerticalGroup(
            matchPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(matchPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(matchPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(matchPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelMatch1)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonMatch1))
                    .addComponent(jScrollPanePattern1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(514, Short.MAX_VALUE))
        );

        jTabbedPaneGenerateFS1.addTab("Pattern Matching", matchPanel1);

        jLabelSelectMP1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabelSelectMP1.setText("Select MP:");

        mpComBox1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        mpComBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MP1", "MP2", "MP3", "MP4", "MP5", "MP6", "MP7", "MP8", "MP9", "MP10", "MP11", "MP12", "MP13", "MP14" }));

        generateBut1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        generateBut1.setText("Generate");

        fsSP1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Follow-up Execute Sequence", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N
        fsSP1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        fsArea1.setColumns(20);
        fsArea1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        fsArea1.setRows(5);
        fsSP1.setViewportView(fsArea1);

        jLabelGenerate1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabelGenerate1.setText("Click this button to generate follow-up execution sequence:");

        javax.swing.GroupLayout generatePanel1Layout = new javax.swing.GroupLayout(generatePanel1);
        generatePanel1.setLayout(generatePanel1Layout);
        generatePanel1Layout.setHorizontalGroup(
            generatePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, generatePanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelSelectMP1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mpComBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(jLabelGenerate1)
                .addGap(18, 18, 18)
                .addComponent(generateBut1)
                .addGap(562, 562, 562))
            .addGroup(generatePanel1Layout.createSequentialGroup()
                .addComponent(fsSP1, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        generatePanel1Layout.setVerticalGroup(
            generatePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generatePanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(generatePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSelectMP1)
                    .addComponent(mpComBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generateBut1)
                    .addComponent(jLabelGenerate1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fsSP1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(504, Short.MAX_VALUE))
        );

        jTabbedPaneGenerateFS1.addTab("Generation", generatePanel1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MT4ConJ");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jTabbedPaneMain.setToolTipText("");
        jTabbedPaneMain.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        testPerartionPanel.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        firstSP.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Procedure", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        procedure.setEditable(false);
        procedure.setBackground(new java.awt.Color(240, 240, 240));
        procedure.setColumns(5);
        procedure.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        procedure.setRows(5);
        procedure.setTabSize(5);
        procedure.setText("\nStep 1: Click the \"Browse\" bu-\ntton on the \"Concurrent Progr-\nam Under Test Selection \" pan-\nel to select a concurrent pro-\ngram under test;\n\nStep 2: Click the \"Upload\" bu-\ntton on the \"Test Case Upload-\ning\" panel to upload test sui-\nt of the program;\n   (1) the table will show all\n       test cases;\n   (2) the right text area will\n       show the content of the\n       test case you selected.\n\nStep 3: Click the \"Parse\" but-\nton on the \"Show Shared Varia-\nble of Program\" to parse the \nprogram and the shared variab-\nle will be shown on the bottom\ntable;\n\nStep 4: Click the \"Next>>\" bu-\ntton;\n\nStep 5: Click the \"Execute\" bu-\ntton on the \"First Execution\" \npanel,the source execution seq-\nuence and output will be shown\non the bottom;\n\nStep 6: Click \"Match\" button on\nthe \"Pattern Matching\" panel to\nobtain patterns that can be used\nto gernate follow-up execution \nsequence;\n\nStep 7: Choose a MP and click \n\"Generate\" button on the \"Gene-\nration\" panel to generate follow\n-up execution sequence;\n\nStep 8: Click \"Execute\" button \non the \"Second Execution\" panel,\nthen the result of follow-up t-\nest case will be shown on the \nbottom area;\n\nStep 9:Click the \"Download\" bu-\ntton to download the testing \nreport. ");
        procedure.setAutoscrolls(false);
        procedure.setBorder(null);
        procedure.setMaximumSize(new java.awt.Dimension(101, 294));
        firstSP.setViewportView(procedure);

        TCUploadPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Test Case Uploading", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        TCUploadLable.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        TCUploadLable.setText("Click this button to upload test suit");

        uploadButton.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        uploadButton.setText("Upload");
        uploadButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                uploadButtonMouseClicked(evt);
            }
        });
        uploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadButtonActionPerformed(evt);
            }
        });

        jScrollPaneTS.setBorder(null);
        jScrollPaneTS.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTableTS.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTableTS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "Test case name_1"},
                {"2", "Test case name_2"},
                {"3", "Test case name_3"},
                {"4", "Test case name_4"},
                {"5", "Test case name_5"},
                {"6", "Test case name_6"},
                {"7", "Test case name_7"},
                {"8", "Test case name_8"},
                {"9", "Test case name_9"},
                {"10", "Test case name_10"},
                {"11", "Test case name_11"},
                {"12", "Test case name_12"},
                {"13", "Test case name_13"},
                {"14", "Test case name_14"},
                {"15", "Test case name_15"},
                {"16", "Test case name_16"},
                {"17", "Test case name_17"},
                {"18", "Test case name_18"},
                {"19", "Test case name_19"},
                {"20", "Test case name_20"},
                {"21", "Test case name_21"},
                {"22", "Test case name_22"},
                {"23", "Test case name_23"},
                {"24", "Test case name_24"},
                {"25", "Test case name_25"}
            },
            new String [] {
                "TestCase ID", "Test case name"
            }
        ));
        jTableTS.getTableHeader().setResizingAllowed(false);
        jTableTS.getTableHeader().setReorderingAllowed(false);
        jTableTS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableTSMouseClicked(evt);
            }
        });
        jScrollPaneTS.setViewportView(jTableTS);

        jScrollPaneTC.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneTC.setViewportBorder(javax.swing.BorderFactory.createTitledBorder(null, "Test Case Content", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        jTextAreaTC.setEditable(false);
        jTextAreaTC.setColumns(10);
        jTextAreaTC.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jTextAreaTC.setRows(5);
        jTextAreaTC.setTabSize(5);
        jTextAreaTC.setMaximumSize(new java.awt.Dimension(774, 44));
        jScrollPaneTC.setViewportView(jTextAreaTC);

        javax.swing.GroupLayout TCUploadPanelLayout = new javax.swing.GroupLayout(TCUploadPanel);
        TCUploadPanel.setLayout(TCUploadPanelLayout);
        TCUploadPanelLayout.setHorizontalGroup(
            TCUploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TCUploadPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TCUploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TCUploadLable)
                    .addComponent(jScrollPaneTS, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TCUploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TCUploadPanelLayout.createSequentialGroup()
                        .addComponent(uploadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 277, Short.MAX_VALUE))
                    .addComponent(jScrollPaneTC, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE))
                .addContainerGap())
        );
        TCUploadPanelLayout.setVerticalGroup(
            TCUploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TCUploadPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(TCUploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TCUploadLable, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uploadButton))
                .addGap(22, 22, 22)
                .addGroup(TCUploadPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneTS, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPaneTC, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
                .addContainerGap())
        );

        sharedVariablePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Shared variable of Program Display", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        praseLable.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        praseLable.setText("Click this button to parse program under test and obtain the shared variable:");

        praseButton.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        praseButton.setText("Parse");
        praseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                praseButtonMouseClicked(evt);
            }
        });
        praseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                praseButtonActionPerformed(evt);
            }
        });

        jScrollPanesharedVariable.setBorder(null);

        jTableSharedVariable.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTableSharedVariable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "shared variable_1"},
                {"2", "shared variable_2"},
                {"3", "shared variable_3"},
                {"4", "shared variable_4"},
                {"5", "shared variable_5"},
                {"6", "shared variable_6"},
                {"7", "shared variable_7"}
            },
            new String [] {
                "Shared Varible ID", "Shared Variable Name"
            }
        ));
        jScrollPanesharedVariable.setViewportView(jTableSharedVariable);
        if (jTableSharedVariable.getColumnModel().getColumnCount() > 0) {
            jTableSharedVariable.getColumnModel().getColumn(0).setResizable(false);
            jTableSharedVariable.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout sharedVariablePanelLayout = new javax.swing.GroupLayout(sharedVariablePanel);
        sharedVariablePanel.setLayout(sharedVariablePanelLayout);
        sharedVariablePanelLayout.setHorizontalGroup(
            sharedVariablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sharedVariablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(praseLable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(praseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(sharedVariablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(sharedVariablePanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPanesharedVariable, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        sharedVariablePanelLayout.setVerticalGroup(
            sharedVariablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sharedVariablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sharedVariablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(praseLable)
                    .addComponent(praseButton))
                .addContainerGap(81, Short.MAX_VALUE))
            .addGroup(sharedVariablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sharedVariablePanelLayout.createSequentialGroup()
                    .addGap(38, 38, 38)
                    .addComponent(jScrollPanesharedVariable, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        programPan.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Concurrent Program Under Test Selection", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N
        programPan.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        programPathLable1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        programPathLable1.setText("The path of program under test:");

        programfield1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        programButt1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        programButt1.setText("Browse");
        programButt1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                programButt1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout programPanLayout = new javax.swing.GroupLayout(programPan);
        programPan.setLayout(programPanLayout);
        programPanLayout.setHorizontalGroup(
            programPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(programPanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(programPathLable1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(programfield1)
                .addGap(29, 29, 29)
                .addComponent(programButt1)
                .addContainerGap())
        );
        programPanLayout.setVerticalGroup(
            programPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, programPanLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(programPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(programPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(programfield1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(programButt1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(programPathLable1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonBack.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonBack.setText("<< Back");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        jButtonNext.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonNext.setText("Next>>");
        jButtonNext.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonNextMouseClicked(evt);
            }
        });

        jButtonExit.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonExit.setText("Exit");
        jButtonExit.setPreferredSize(new java.awt.Dimension(69, 23));
        jButtonExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonExitMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout testPerartionPanelLayout = new javax.swing.GroupLayout(testPerartionPanel);
        testPerartionPanel.setLayout(testPerartionPanelLayout);
        testPerartionPanelLayout.setHorizontalGroup(
            testPerartionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testPerartionPanelLayout.createSequentialGroup()
                .addGroup(testPerartionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, testPerartionPanelLayout.createSequentialGroup()
                        .addComponent(firstSP, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(testPerartionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TCUploadPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sharedVariablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(programPan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(testPerartionPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonBack)
                        .addGap(33, 33, 33)
                        .addComponent(jButtonNext)
                        .addGap(31, 31, 31)
                        .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        testPerartionPanelLayout.setVerticalGroup(
            testPerartionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testPerartionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(testPerartionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(testPerartionPanelLayout.createSequentialGroup()
                        .addComponent(programPan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TCUploadPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sharedVariablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(firstSP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(testPerartionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBack)
                    .addComponent(jButtonNext)
                    .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jTabbedPaneMain.addTab("Test Preparation", testPerartionPanel);

        jLabelProgram.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabelProgram.setText("Program Under Test:");

        jLabelTC.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabelTC.setText("Test Case Uploaded:");

        programInfoField.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        programInfoField.setToolTipText("");
        programInfoField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                programInfoFieldActionPerformed(evt);
            }
        });

        tcInfoField.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        tcInfoField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tcInfoFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout infoPanLayout = new javax.swing.GroupLayout(infoPan);
        infoPan.setLayout(infoPanLayout);
        infoPanLayout.setHorizontalGroup(
            infoPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelProgram)
                    .addComponent(jLabelTC))
                .addGap(18, 18, 18)
                .addGroup(infoPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tcInfoField)
                    .addComponent(programInfoField))
                .addGap(14, 14, 14))
        );
        infoPanLayout.setVerticalGroup(
            infoPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(infoPanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(infoPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelProgram)
                    .addComponent(programInfoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(infoPanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTC)
                    .addComponent(tcInfoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        firstExePan.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Source Execution", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        jLabelExe.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabelExe.setText("Click this button to execute test:");

        jButtonExe.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonExe.setText("Execute");
        jButtonExe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonExeMouseClicked(evt);
            }
        });
        jButtonExe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExeActionPerformed(evt);
            }
        });

        jScrollPaneSS.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Source Execution Sequence", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        jTextAreaSS.setEditable(false);
        jTextAreaSS.setColumns(20);
        jTextAreaSS.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jTextAreaSS.setRows(5);
        jScrollPaneSS.setViewportView(jTextAreaSS);

        javax.swing.GroupLayout firstExePanLayout = new javax.swing.GroupLayout(firstExePan);
        firstExePan.setLayout(firstExePanLayout);
        firstExePanLayout.setHorizontalGroup(
            firstExePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(firstExePanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(firstExePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(firstExePanLayout.createSequentialGroup()
                        .addComponent(jLabelExe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 211, Short.MAX_VALUE)
                        .addComponent(jButtonExe, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88))
                    .addComponent(jScrollPaneSS))
                .addContainerGap())
        );
        firstExePanLayout.setVerticalGroup(
            firstExePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(firstExePanLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(firstExePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelExe)
                    .addComponent(jButtonExe))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPaneSS, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
        );

        firstSP1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Procedure", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        procedure1.setEditable(false);
        procedure1.setBackground(new java.awt.Color(240, 240, 240));
        procedure1.setColumns(5);
        procedure1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        procedure1.setRows(5);
        procedure1.setTabSize(5);
        procedure1.setText("\nStep 1: Click the \"Browse\" bu-\ntton on the \"Concurrent Progr-\nam Under Test Selection \" pan-\nel to select a concurrent pro-\ngram under test;\n\nStep 2: Click the \"Upload\" bu-\ntton on the \"Test Case Upload-\ning\" panel to upload test sui-\nt of the program;\n   (1) the table will show all\n       test cases;\n   (2) the right text area will\n       show the content of the\n       test case you selected.\n\nStep 3: Click the \"Parse\" but-\nton on the \"Show Shared Varia-\nble of Program\" to parse the \nprogram and the shared variab-\nle will be shown on the bottom\ntable;\n\nStep 4: Click the \"Next>>\" bu-\ntton;\n\nStep 5: Click the \"Execute\" bu-\ntton on the \"First Execution\" \npanel,the source execution seq-\nuence and output will be shown\non the bottom;\n\nStep 6: Click \"Match\" button on\nthe \"Pattern Matching\" panel to\nobtain patterns that can be used\nto gernate follow-up execution \nsequence;\n\nStep 7: Choose a MP and click \n\"Generate\" button on the \"Gene-\nration\" panel to generate follow\n-up execution sequence;\n\nStep 8: Click \"Execute\" button \non the \"Second Execution\" panel,\nthen the result of follow-up t-\nest case will be shown on the \nbottom area;\n\nStep 9:Click the \"Download\" bu-\ntton to download the testing \nreport. ");
        procedure1.setAutoscrolls(false);
        procedure1.setBorder(null);
        procedure1.setMaximumSize(new java.awt.Dimension(101, 294));
        firstSP1.setViewportView(procedure1);

        jButtonBack2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonBack2.setText("<< Back");
        jButtonBack2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonBack2MouseClicked(evt);
            }
        });
        jButtonBack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBack2ActionPerformed(evt);
            }
        });

        jButtonNext2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonNext2.setText("Next>>");

        jButtonExit2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonExit2.setText("Exit");
        jButtonExit2.setPreferredSize(new java.awt.Dimension(69, 23));
        jButtonExit2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonExit2MouseClicked(evt);
            }
        });

        secExePan1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Follow-up Execution", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        jLabelExe2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabelExe2.setText("Click this button to execute test:");

        jButtonExe2.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonExe2.setText("Execute");
        jButtonExe2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonExe2MouseClicked(evt);
            }
        });
        jButtonExe2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExe2ActionPerformed(evt);
            }
        });

        jScrollPaneFO.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Follow-up Output", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        jTextAreaFO.setEditable(false);
        jTextAreaFO.setColumns(20);
        jTextAreaFO.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTextAreaFO.setRows(5);
        jScrollPaneFO.setViewportView(jTextAreaFO);

        javax.swing.GroupLayout secExePan1Layout = new javax.swing.GroupLayout(secExePan1);
        secExePan1.setLayout(secExePan1Layout);
        secExePan1Layout.setHorizontalGroup(
            secExePan1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, secExePan1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(secExePan1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPaneFO)
                    .addGroup(secExePan1Layout.createSequentialGroup()
                        .addComponent(jLabelExe2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonExe2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82)))
                .addContainerGap())
        );
        secExePan1Layout.setVerticalGroup(
            secExePan1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secExePan1Layout.createSequentialGroup()
                .addGroup(secExePan1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelExe2)
                    .addComponent(jButtonExe2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPaneFO, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButtonDpwnload.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonDpwnload.setText("Download Test Report");
        jButtonDpwnload.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonDpwnloadMouseClicked(evt);
            }
        });

        jPanelFSGeneration.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Follow-up Execution Sequence Generation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        jTabbedPaneMatching.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        jPanelMatching.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        jLabelMatch.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabelMatch.setText("Click this button to match pattern:");

        jButtonMatch.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonMatch.setText("Match");
        jButtonMatch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonMatchMouseClicked(evt);
            }
        });

        jTablePattern.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTablePattern.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "R_u(l)W_u'(l)W_u(l)", null},
                {"2", "R_u(l)W_u'(l)R_u(l)", null},
                {"3", "W_u(l)R_u'(l)W_u(l)", null},
                {"4", "W_u(l)W_u'(l)R_u(l)", null},
                {"5", "W_u(l)W_u'(l)W_u(l)", null},
                {"6", "W_u(l_1)W_u'(l_1)W_u'(l_2)W_u(l_2)", null},
                {"7", "W_u(l_1)W_u'(l_2)W_u'(l_1)W_u(l_2)", null},
                {"8", "W_u(l_1)W_u'(l_2)W_u'(l_2)W_u(l_1)", null},
                {"9", "W_u(l_1)R_u'(l_1)R_u'(l_2)W_u(l_2)", null},
                {"10", "W_u(l_1)R_u'(l_2)R_u'(l_1)W_u(l_2)", null},
                {"11", "R_u(l_1)W_u'(l_1)W_u'(l_2)R_u(l_2)", null},
                {"12", "R_u(l_1)W_u'(l_2)W_u'(l_1)R_u(l_2)", null},
                {"13", "R_u(l_1)W_u'(l_2)R_u(l_2)W_u'(l_1)", null},
                {"14", "W_u(l_1)R_u'(l_2)W_u(l_2)R_u'(l_1)", null}
            },
            new String [] {
                "Pattern ID", "Pattern", "isMatch"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPanePattern.setViewportView(jTablePattern);
        if (jTablePattern.getColumnModel().getColumnCount() > 0) {
            jTablePattern.getColumnModel().getColumn(0).setPreferredWidth(30);
            jTablePattern.getColumnModel().getColumn(1).setPreferredWidth(145);
            jTablePattern.getColumnModel().getColumn(2).setResizable(false);
            jTablePattern.getColumnModel().getColumn(2).setPreferredWidth(50);
        }

        javax.swing.GroupLayout jPanelMatchingLayout = new javax.swing.GroupLayout(jPanelMatching);
        jPanelMatching.setLayout(jPanelMatchingLayout);
        jPanelMatchingLayout.setHorizontalGroup(
            jPanelMatchingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMatchingLayout.createSequentialGroup()
                .addGroup(jPanelMatchingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMatchingLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelMatch))
                    .addGroup(jPanelMatchingLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jButtonMatch)))
                .addContainerGap(479, Short.MAX_VALUE))
            .addGroup(jPanelMatchingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMatchingLayout.createSequentialGroup()
                    .addGap(234, 234, 234)
                    .addComponent(jScrollPanePattern, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanelMatchingLayout.setVerticalGroup(
            jPanelMatchingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMatchingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelMatch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonMatch)
                .addContainerGap(45, Short.MAX_VALUE))
            .addGroup(jPanelMatchingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMatchingLayout.createSequentialGroup()
                    .addGap(12, 12, 12)
                    .addComponent(jScrollPanePattern, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jTabbedPaneMatching.addTab("Matching", jPanelMatching);

        jLabelMP.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jLabelMP.setText("Select MP:");

        jComboBoxMP.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jComboBoxMP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MP1", "MP2", "MP3", "MP4", "MP5", "MP6", "MP7", "MP8", "MP9", "MP10", "MP11", "MP12", "MP13", "MP14" }));
        jComboBoxMP.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxMPItemStateChanged(evt);
            }
        });

        jLabelGenerate.setText("Click this button to generate follow-up execution sequence:");

        jButtonGenerate.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jButtonGenerate.setText("Generate");
        jButtonGenerate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonGenerateMouseClicked(evt);
            }
        });

        jScrollPaneFS.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Follow-up Execution Sequence", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N

        jTextAreaFS.setEditable(false);
        jTextAreaFS.setColumns(20);
        jTextAreaFS.setFont(new java.awt.Font("Times New Roman", 0, 12));
        jTextAreaFS.setRows(5);
        jScrollPaneFS.setViewportView(jTextAreaFS);

        javax.swing.GroupLayout jPanelGenerationLayout = new javax.swing.GroupLayout(jPanelGeneration);
        jPanelGeneration.setLayout(jPanelGenerationLayout);
        jPanelGenerationLayout.setHorizontalGroup(
            jPanelGenerationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGenerationLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabelMP)
                .addGap(18, 18, 18)
                .addComponent(jComboBoxMP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(jLabelGenerate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jButtonGenerate)
                .addContainerGap())
            .addGroup(jPanelGenerationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelGenerationLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPaneFS, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanelGenerationLayout.setVerticalGroup(
            jPanelGenerationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGenerationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelGenerationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMP)
                    .addComponent(jComboBoxMP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelGenerate)
                    .addComponent(jButtonGenerate))
                .addContainerGap(69, Short.MAX_VALUE))
            .addGroup(jPanelGenerationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelGenerationLayout.createSequentialGroup()
                    .addGap(35, 35, 35)
                    .addComponent(jScrollPaneFS, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)))
        );

        jTabbedPaneMatching.addTab("Generation", jPanelGeneration);

        javax.swing.GroupLayout jPanelFSGenerationLayout = new javax.swing.GroupLayout(jPanelFSGeneration);
        jPanelFSGeneration.setLayout(jPanelFSGenerationLayout);
        jPanelFSGenerationLayout.setHorizontalGroup(
            jPanelFSGenerationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanelFSGenerationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFSGenerationLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTabbedPaneMatching, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)))
        );
        jPanelFSGenerationLayout.setVerticalGroup(
            jPanelFSGenerationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 140, Short.MAX_VALUE)
            .addGroup(jPanelFSGenerationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelFSGenerationLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTabbedPaneMatching, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout executionPanelLayout = new javax.swing.GroupLayout(executionPanel);
        executionPanel.setLayout(executionPanelLayout);
        executionPanelLayout.setHorizontalGroup(
            executionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(executionPanelLayout.createSequentialGroup()
                .addGroup(executionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(executionPanelLayout.createSequentialGroup()
                        .addComponent(jButtonDpwnload)
                        .addGap(40, 40, 40)
                        .addComponent(jButtonBack2)
                        .addGap(33, 33, 33)
                        .addComponent(jButtonNext2)
                        .addGap(31, 31, 31)
                        .addComponent(jButtonExit2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(executionPanelLayout.createSequentialGroup()
                        .addComponent(firstSP1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(executionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(infoPan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(secExePan1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(firstExePan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanelFSGeneration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        executionPanelLayout.setVerticalGroup(
            executionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(executionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(executionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(firstSP1)
                    .addGroup(executionPanelLayout.createSequentialGroup()
                        .addComponent(infoPan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(firstExePan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelFSGeneration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(secExePan1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(executionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBack2)
                    .addComponent(jButtonNext2)
                    .addComponent(jButtonExit2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDpwnload))
                .addGap(20, 20, 20))
        );

        jTabbedPaneMain.addTab("Test Case Execution", executionPanel);

        getContentPane().add(jTabbedPaneMain);
        jTabbedPaneMain.getAccessibleContext().setAccessibleName("First Execution");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tcInfoFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tcInfoFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tcInfoFieldActionPerformed

    private void uploadButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadButtonMouseClicked
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.showDialog(new JLabel(), "选择测试用例文件夹");
        File folder = chooser.getSelectedFile();
        tcPath = folder.getAbsolutePath().toString();

        //获取选择的文件夹的绝对路径
        String path = folder.getAbsolutePath().toString();
        //获取文件夹下所有的文件
//        Vector targetFiles = new Vector();
        getJavacArgForDir(path, "", targetFiles);

        //重新设置表格内容
        jTableTS.setModel(new FileTableModel(targetFiles));
        

        // TODO add your handling code here:
    }//GEN-LAST:event_uploadButtonMouseClicked

    private void praseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_praseButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_praseButtonActionPerformed

    private void jButtonExeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonExeActionPerformed

    private void programInfoFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_programInfoFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_programInfoFieldActionPerformed

    private void programButt1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_programButt1MouseClicked
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        chooser.showDialog(new JLabel(), "选择待测程序");
        File file = chooser.getSelectedFile();
        
        programfield1.setText(file.getAbsoluteFile().toString());
        int index = file.getAbsoluteFile().toString().lastIndexOf("\\");
        programName = file.getAbsoluteFile().toString().substring(index+1);
        programInfoField.setText(programName);// TODO add your handling code here:
        programPath = file.getAbsolutePath().toString().substring(0,index+1);
        startTime = System.currentTimeMillis();
    }//GEN-LAST:event_programButt1MouseClicked

    private void praseButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_praseButtonMouseClicked
        // TODO add your handling code here:
        String newPath = SVPath + programName.split("\\.")[0]+".txt";
        System.out.println(newPath);
        Vector sharedVariable = readTxt(newPath);
        jTableSharedVariable.setModel(new SharedVariableTaModel(sharedVariable));
    }//GEN-LAST:event_praseButtonMouseClicked

    private void uploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uploadButtonActionPerformed

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jButtonBack2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBack2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonBack2ActionPerformed

    private void jButtonExe2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExe2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonExe2ActionPerformed

    private void jTableTSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTSMouseClicked
        // TODO add your handling code here:
        int row = jTableTS.getSelectedRow();
        tcName = jTableTS.getValueAt(row,1).toString();
        tcInfoField.setText(tcName);
        showFileContent();
        TCnum++;
    }//GEN-LAST:event_jTableTSMouseClicked

    private void jButtonExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonExitMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButtonExitMouseClicked

    private void jButtonExit2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonExit2MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButtonExit2MouseClicked

    private void jButtonNextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonNextMouseClicked
        // TODO add your handling code here:
        jTabbedPaneMain.setSelectedComponent(executionPanel);
    }//GEN-LAST:event_jButtonNextMouseClicked

    private void jButtonBack2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonBack2MouseClicked
        // TODO add your handling code here:
        jTabbedPaneMain.setSelectedComponent(testPerartionPanel);
    }//GEN-LAST:event_jButtonBack2MouseClicked

    private void jButtonExeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonExeMouseClicked
        // TODO add your handling code here:
       showTraceContent();
    }//GEN-LAST:event_jButtonExeMouseClicked

    private void jButtonMatchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonMatchMouseClicked
        // TODO add your handling code here:
        String path = SEPath + programName.split("\\.")[0]+".txt";

        String isMatchg1 = obtpg1.obtainPattern(obtpg1.getTrace(path));
        String isMatchg2 = obtpg2.obtainPattern(obtpg2.getTrace(path));
        String isMatchg3 = obtpg3.obtainPattern(obtpg3.getTrace(path));
        String isMatchg4 = obtpg4.obtainPattern(obtpg4.getTrace(path));
        String isMatchg5 = obtpg5.obtainPattern(obtpg5.getTrace(path));
        String isMatchg6 = obtpg6.obtainPattern(obtpg6.getTrace(path));

        groups.add(isMatchg1);
        groups.add(isMatchg2);
        groups.add(isMatchg3);
        groups.add(isMatchg4);
        groups.add(isMatchg5);
        groups.add(isMatchg6);

        jComboBoxMP.removeAllItems();
            for (int i = 0; i < groups.size(); i++) {
                if (groups.get(i)!=null) {
                    if (groups.get(i).equals("g1")) {
                        jTablePattern.setValueAt("YES", 0, 2);
                        jComboBoxMP.addItem("MP1");
                        jTablePattern.setValueAt("YES", 3, 2);
                        jComboBoxMP.addItem("MP4");
                    }
                    if (groups.get(i).equals("g2")) {
                        jTablePattern.setValueAt("YES", 1, 2);
                        jComboBoxMP.addItem("MP2");
                    }
                    if (groups.get(i).equals("g3")) {
                        jTablePattern.setValueAt("YES", 2, 2);
                        jComboBoxMP.addItem("MP3");
                    }
                    if (groups.get(i).equals("g4")) {
                        jTablePattern.setValueAt("YES", 4, 2);
                        jComboBoxMP.addItem("MP5");
                    }
                    if (groups.get(i).equals("g5")) {
                        jTablePattern.setValueAt("YES", 5, 2);
                        jComboBoxMP.addItem("MP6");
                        jTablePattern.setValueAt("YES", 6, 2);
                        jComboBoxMP.addItem("MP7");
                        jTablePattern.setValueAt("YES", 7, 2);
                        jComboBoxMP.addItem("MP8");
                    }
                    if (groups.get(i).equals("g6")) {
                        jTablePattern.setValueAt("YES", 8, 2);
                        jComboBoxMP.addItem("MP9");
                        jTablePattern.setValueAt("YES", 9, 2);
                        jComboBoxMP.addItem("MP10");
                        jTablePattern.setValueAt("YES", 10, 2);
                        jComboBoxMP.addItem("MP11");
                        jTablePattern.setValueAt("YES", 11, 2);
                        jComboBoxMP.addItem("MP12");
                        jTablePattern.setValueAt("YES", 12, 2);
                        jComboBoxMP.addItem("MP13");
                        jTablePattern.setValueAt("YES", 13, 2);
                        jComboBoxMP.addItem("MP14");
                    }
                }
            }
    }//GEN-LAST:event_jButtonMatchMouseClicked

    private void jButtonGenerateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonGenerateMouseClicked
        // TODO add your handling code here:
         sourceSeq = obtpg1.getTrace(SEPath + programName.split("\\.")[0]+".txt");

        try {
            MPFactory4PUT factory4PUT = new MPFactory4PUT();
            MetamorphicPattern mp = factory4PUT.produceMP(myMP,programName);

            List<String> initFS = mp.followUpSeqWithoutSort(sourceSeq);
            followupSeq = mp.followUpSeq(initFS);
            if (followupSeq.size()!=0 ){
                try{
                    for (String event : followupSeq) {
                        jTextAreaFS.removeAll();
                        jTextAreaFS.append(event + "\n");
                    }
                }catch (NullPointerException e){
                    jTextAreaFS.removeAll();
                    jTextAreaFS.append("NO REACHABLED SEQUENCE!!");
                }

            }else {
                jTextAreaFS.removeAll();
                jTextAreaFS.append("NO REACHABLED SEQUENCE!!");
            }
        }catch (NullPointerException e){
            e.printStackTrace();
            jTextAreaFS.removeAll();
            jTextAreaFS.append("NO REACHABLED SEQUENCE!!");
        }
    }//GEN-LAST:event_jButtonGenerateMouseClicked

    private void jComboBoxMPItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxMPItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            myMP = (String) jComboBoxMP.getSelectedItem();
        }
    }//GEN-LAST:event_jComboBoxMPItemStateChanged

    private void jButtonExe2MouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        switch (programName) {
            case "Critical.java":
                switch (myMP) {
                    case "MP3":
                        String[] outputs = printFO4Cri();
                        for (String output : outputs) {
                            jTextAreaFO.append(output+"\n");
                        }

                        break;
                    case "MP4":
                        String[] outputs4 = printFO4Cri();
                        for (String output : outputs4) {
                            jTextAreaFO.append(output+"\n");
                        }
                        break;
                    case "MP5":

                        String[] outputs5 = printFO4Cri();
                        for (String output : outputs5) {
                            jTextAreaFO.append(output+"\n");
                        }
                        break;
                }
                break;
            case "Account.java":
                if (myMP.equals("MP1")) {
                    String[] outputs = printFO4Acc();
                    for (String output : outputs) {
                        jTextAreaFO.append(output+"\n");
                    }
                }
                break;
            default:
                switch (myMP) {
                    case "MP1":

                        String[] outputs1 = printFO4Air();
                        for (String output : outputs1) {
                            jTextAreaFO.append(output+"\n");
                        }
                        break;
                    case "MP2":
                        String[] outputs2 = printFO4Air();
                        for (String output : outputs2) {
                            jTextAreaFO.append(output+"\n");
                        }
                        break;
                    case "MP4":
                        String[] outputs4 = printFO4Air();
                        for (String output : outputs4) {
                            jTextAreaFO.append(output+"\n");
                        }
                        break;
                    case "MP7":
                        String[] outputs7 = printFO4Air();
                        for (String output : outputs7) {
                            jTextAreaFO.append(output+"\n");
                        }
                        break;
                    case "MP10":
                        String[] outputs10 = printFO4Air();
                        for (String output : outputs10) {
                            jTextAreaFO.append(output+"\n");
                        }
                        break;
                    case "MP12":
                        String[] outputs12 = printFO4Air();
                        for (String output : outputs12) {
                            jTextAreaFO.append(output+"\n");
                        }
                        break;
                }
                break;
        }
    }

    private void jButtonDpwnloadMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:

        int time = (int)(System.currentTimeMillis()-startTime);

        ProduceReport produceReport = new ProduceReport();
        try {
            produceReport.produceReport(programName,TCnum);
        } catch (Exception e) {
            e.printStackTrace();
        }

        int res = JOptionPane.showConfirmDialog(executionPanel,"下载并打开测试报告？","Download",JOptionPane.YES_NO_CANCEL_OPTION);

        if (res==JOptionPane.YES_OPTION){

            String fileName = "F:\\CMTester\\"+programName.split("\\.")[0]+" Test Report.pdf";
            try {
                Runtime.getRuntime().exec(new String[]{"E:\\fuxin\\Foxit Reader\\FoxitReader.exe",fileName});
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

    //读取测试用例内容
    private void showFileContent(){
        try {
            String strLine;
            File myFile = new File(tcPath, tcName);
            String blank_str;
            LineNumberReader lReader = new LineNumberReader(new FileReader(myFile));

            Document ddoc = jTextAreaTC.getDocument();

            while ((strLine = lReader.readLine()) != null) {
                blank_str = "";
                int del = (new Integer(lReader.getLineNumber())).toString().length();
                for (int k = 0; k < 5 - del; k++) {
                    blank_str = blank_str + " ";
                }
                ddoc.insertString(ddoc.getLength(), lReader.getLineNumber() + blank_str,null);
                ddoc.insertString(ddoc.getLength(), strLine + "\n", null);
            }
            lReader.close();

        } catch (Exception e) {
            System.err.println(" [error] " + e);
        }
    }

    //读取轨迹内容到textarea
    private void showTraceContent(){
        File file = null;
        try { //以缓冲区方式读取文件内容
            jTextAreaSS.setText("");
            file = new File(FullPath + programName.split("\\.")[0]+".txt");
            FileReader filereader = new FileReader(file);
            BufferedReader bufferreader = new BufferedReader(filereader);
            String aline;
            while ((aline = bufferreader.readLine()) != null)
                //按行读取文本，显示在TEXTAREA中
                jTextAreaSS.append(aline + "\r\n");
            filereader.close();
            bufferreader.close();

        } catch (IOException e) {
            System.out.println(e);
        }

    }

    //读取共享变量到表格
    private Vector readTxt(String name){
        // 使用ArrayList来存储每行读取到的字符串
        Vector stringVector = new Vector();
        try {
            FileReader fr = new FileReader(name);
            BufferedReader bf = new BufferedReader(fr);
            String str;
            // 按行读取字符串
            while ((str = bf.readLine()) != null) {
                stringVector.add(str);
            }
            bf.close();
            fr.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return stringVector;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CMTester.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(CMTester.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(CMTester.class.getName()).log(Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            Logger.getLogger(CMTester.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CMTester().setVisible(true);
        });
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel TCUploadLable;
    private javax.swing.JPanel TCUploadPanel;
    private javax.swing.JPanel executionPanel;
    private javax.swing.JPanel firstExePan;
    private javax.swing.JScrollPane firstSP;
    private javax.swing.JScrollPane firstSP1;
    private javax.swing.JTextArea fsArea1;
    private javax.swing.JScrollPane fsSP1;
    private javax.swing.JButton generateBut1;
    private javax.swing.JPanel generatePanel1;
    private javax.swing.JPanel infoPan;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonBack2;
    private javax.swing.JButton jButtonDpwnload;
    private javax.swing.JButton jButtonExe;
    private javax.swing.JButton jButtonExe2;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonExit2;
    private javax.swing.JButton jButtonGenerate;
    private javax.swing.JButton jButtonMatch;
    private javax.swing.JButton jButtonMatch1;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonNext2;
    private javax.swing.JComboBox<String> jComboBoxMP;
    private JLabel jLabelExe;
    private JLabel jLabelExe2;
    private JLabel jLabelGenerate;
    private JLabel jLabelGenerate1;
    private JLabel jLabelMP;
    private JLabel jLabelMatch;
    private JLabel jLabelMatch1;
    private JLabel jLabelProgram;
    private JLabel jLabelSelectMP1;
    private JLabel jLabelTC;
    private javax.swing.JPanel jPanelFSGeneration;
    private javax.swing.JPanel jPanelGeneration;
    private javax.swing.JPanel jPanelMatching;
    private javax.swing.JScrollPane jScrollPaneFO;
    private javax.swing.JScrollPane jScrollPaneFS;
    private javax.swing.JScrollPane jScrollPanePattern;
    private javax.swing.JScrollPane jScrollPanePattern1;
    private javax.swing.JScrollPane jScrollPaneSS;
    private javax.swing.JScrollPane jScrollPaneTC;
    private javax.swing.JScrollPane jScrollPaneTS;
    private javax.swing.JScrollPane jScrollPanesharedVariable;
    private javax.swing.JTabbedPane jTabbedPaneGenerateFS1;
    private javax.swing.JTabbedPane jTabbedPaneMain;
    private javax.swing.JTabbedPane jTabbedPaneMatching;
    private javax.swing.JTable jTablePattern;
    private javax.swing.JTable jTablePattern1;
    private javax.swing.JTable jTableSharedVariable;
    private javax.swing.JTable jTableTS;
    private javax.swing.JTextArea jTextAreaFO;
    private javax.swing.JTextArea jTextAreaFS;
    private javax.swing.JTextArea jTextAreaSS;
    private javax.swing.JTextArea jTextAreaTC;
    private javax.swing.JPanel matchPanel1;
    private javax.swing.JComboBox<String> mpComBox1;
    private javax.swing.JButton praseButton;
    private JLabel praseLable;
    private javax.swing.JTextArea procedure;
    private javax.swing.JTextArea procedure1;
    private javax.swing.JButton programButt1;
    private javax.swing.JTextField programInfoField;
    private javax.swing.JPanel programPan;
    private JLabel programPathLable1;
    private javax.swing.JTextField programfield1;
    private javax.swing.JPanel secExePan1;
    private javax.swing.JPanel sharedVariablePanel;
    private javax.swing.JTextField tcInfoField;
    private javax.swing.JPanel testPerartionPanel;
    private javax.swing.JButton uploadButton;
    // End of variables declaration//GEN-END:variables
}
